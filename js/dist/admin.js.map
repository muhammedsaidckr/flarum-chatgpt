{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@muhammedsaidckr/flarum-chatgpt/webpack/bootstrap","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/compat get default export","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/define property getters","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/hasOwnProperty shorthand","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/make namespace object","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['common/app']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./src/common/index.ts","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['admin/app']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['common/components/Button']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./src/admin/components/ChatGptSettings.tsx","webpack://@muhammedsaidckr/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@muhammedsaidckr/flarum-chatgpt/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('muhammedsaidckr/flarum-chatgpt', () => {});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/admin/app';\nimport ExtensionPage, { ExtensionPageAttrs } from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\n\n// Fallback models in case cached models are not available\nconst FALLBACK_MODELS = [\n  'gpt-4.5-preview',\n  'gpt-4o',\n  'gpt-4o-mini',\n  'gpt-4-turbo',\n  'gpt-4',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-instruct',\n  'o1-preview',\n  'o1-mini',\n  'chatgpt-4o-latest',\n];\n\nexport default class ChatGptSettings extends ExtensionPage {\n  loading!: boolean;\n  isFetchingModels!: boolean;\n  models!: Record<string, string>;\n\n  oninit(vnode: any) {\n    super.oninit(vnode);\n    this.loading = false;\n    this.isFetchingModels = false;\n    this.models = this.getModels();\n  }\n\n  getModels() {\n    try {\n      const cachedModels = app.data.settings['muhammedsaidckr-chatgpt.cached_models'];\n      if (cachedModels && cachedModels !== '[]') {\n        const parsed = JSON.parse(cachedModels);\n        if (Array.isArray(parsed) && parsed.length > 0) {\n          return parsed.reduce((acc, model) => {\n            acc[model.id] = model.id;\n            return acc;\n          }, {});\n        }\n      }\n    } catch (e) {\n      console.error('Failed to parse cached models:', e);\n    }\n\n    // Return fallback models\n    return FALLBACK_MODELS.reduce((acc, modelId) => {\n      acc[modelId] = modelId;\n      return acc;\n    }, {} as Record<string, string>);\n  }\n\n  fetchModels() {\n    this.isFetchingModels = true;\n\n    app\n      .request<{ models: any[]; count: number; last_fetched: number }>({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/chatgpt/fetch-models',\n      })\n      .then(\n        (response) => {\n          this.isFetchingModels = false;\n\n          // Update cached models in settings\n          app.data.settings['muhammedsaidckr-chatgpt.cached_models'] = JSON.stringify(response.models);\n          app.data.settings['muhammedsaidckr-chatgpt.models_last_fetched'] = response.last_fetched.toString();\n\n          // Refresh models list\n          this.models = this.getModels();\n\n          app.alerts.show(\n            {\n              type: 'success',\n            },\n            app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.models_fetched_success', {\n              count: response.count,\n            })\n          );\n\n          m.redraw();\n        },\n        (error) => {\n          this.isFetchingModels = false;\n\n          app.alerts.show(\n            {\n              type: 'error',\n            },\n            app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.fetch_models_error')\n          );\n\n          m.redraw();\n        }\n      );\n  }\n\n  getLastFetchedText() {\n    const timestamp = parseInt(app.data.settings['muhammedsaidckr-chatgpt.models_last_fetched'] || '0');\n\n    if (timestamp === 0) {\n      return app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.models_never_fetched');\n    }\n\n    const date = new Date(timestamp * 1000);\n    return app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.models_last_fetched', {\n      date: date.toLocaleString(),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.api_key',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.api_key_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.api_key_help', {\n                a: <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              placeholder: 'sk-...',\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.base_uri',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.base_uri_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.base_uri_help'),\n              placeholder: 'api.openai.com',\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.model',\n              type: 'dropdown',\n              options: this.models,\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.model_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.model_help', {\n                a: <a href=\"https://platform.openai.com/docs/models/overview\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n            })}\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.fetch_models_label')}</label>\n              <div>\n                <Button\n                  className=\"Button Button--primary\"\n                  onclick={() => this.fetchModels()}\n                  loading={this.isFetchingModels}\n                  disabled={this.isFetchingModels}\n                >\n                  {app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.fetch_models_button')}\n                </Button>\n                <p className=\"helpText\">{this.getLastFetchedText()}</p>\n              </div>\n            </div>\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.max_tokens',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.max_tokens_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.max_tokens_help', {\n                a: <a href=\"https://help.openai.com/en/articles/4936856\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              default: 100,\n            })}\n            {/* new setting for moderation */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.moderation',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.moderation_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.moderation_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.user_prompt',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_help'),\n            })}\n            {/* new settings for role */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.role',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.role_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.role_help'),\n            })}\n            {/* new settings for prompt */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.prompt',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.prompt_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.prompt_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.user_prompt_badge_text',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_badge_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_badge_help'),\n            })}\n            {/*new setting for queue_active */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.queue_active',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.queue_active_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.queue_active_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.answer_duration',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.answer_duration_label'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.enable_on_reply',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_reply_label'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.enable_on_discussion_started',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_discussion_started_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_discussion_started_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.continue_to_reply',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.continue_to_reply_count',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_count_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_count_help'),\n            })}\n            {this.buildSettingComponent({\n              type: 'flarum-tags.select-tags',\n              setting: 'muhammedsaidckr-chatgpt.enabled-tags',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enabled_tags_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enabled_tags_help'),\n              options: {\n                requireParentTag: false,\n                limits: {\n                  max: {\n                    secondary: 0,\n                  },\n                },\n              },\n            })}\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport ChatGptSettings from './components/ChatGptSettings';\n\napp.initializers.add('muhammedsaidckr-chatgpt', () => {\n  app.extensionData\n    .for('muhammedsaidckr-chatgpt')\n    .registerPermission(\n      {\n        label: app.translator.trans('muhammedsaidckr-chatgpt.admin.permissions.use_chatgpt_assistant_label'),\n        icon: 'fas fa-comment',\n        permission: 'discussion.useChatGPTAssistant',\n        allowGuest: false,\n      },\n      'start'\n    )\n    .registerPage(ChatGptSettings);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","FALLBACK_MODELS","ChatGptSettings","_ExtensionPage","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","loading","isFetchingModels","models","create","constructor","_proto","oninit","vnode","this","getModels","cachedModels","settings","parsed","JSON","parse","isArray","reduce","acc","model","id","e","console","error","modelId","fetchModels","_this2","method","url","attribute","then","response","stringify","last_fetched","toString","show","type","trans","count","m","redraw","getLastFetchedText","timestamp","parseInt","date","Date","toLocaleString","content","_this3","className","buildSettingComponent","setting","label","help","href","target","rel","placeholder","options","Button","onclick","disabled","default","requireParentTag","limits","max","secondary","submitButton","ExtensionPage","registerPermission","icon","permission","allowGuest","registerPage"],"sourceRoot":""}