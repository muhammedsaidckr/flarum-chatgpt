{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@muhammedsaidckr/flarum-chatgpt/webpack/bootstrap","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/compat get default export","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/define property getters","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/hasOwnProperty shorthand","webpack://@muhammedsaidckr/flarum-chatgpt/webpack/runtime/make namespace object","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['common/app']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./src/common/index.ts","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['admin/app']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@muhammedsaidckr/flarum-chatgpt/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@muhammedsaidckr/flarum-chatgpt/./src/admin/components/ChatGptSettings.tsx","webpack://@muhammedsaidckr/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@muhammedsaidckr/flarum-chatgpt/./src/admin/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('muhammedsaidckr/flarum-chatgpt', () => {\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","import app from \"flarum/admin/app\";\nimport ExtensionPage, {ExtensionPageAttrs} from 'flarum/admin/components/ExtensionPage';\n\nconst modelsData = require('../../../models.json');\nconst models = modelsData.data.reduce((acc, model) => {\n  acc[model.id] = model.id;\n  return acc;\n}, {});\nexport default class ChatGptSettings extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = false;\n  }\n\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.api_key',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.api_key_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.api_key_help', {\n                a: <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\" rel=\"noopener\"/>,\n              }),\n              placeholder: 'sk-...',\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.model',\n              type: 'dropdown',\n              options: models,\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.model_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.model_help', {\n                a: <a href=\"https://platform.openai.com/docs/models/overview\" target=\"_blank\" rel=\"noopener\"/>,\n              }),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.max_tokens',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.max_tokens_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.max_tokens_help', {\n                a: <a href=\"https://help.openai.com/en/articles/4936856\" target=\"_blank\" rel=\"noopener\"/>,\n              }),\n              default: 100,\n            })}\n            {/* new setting for moderation */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.moderation',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.moderation_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.moderation_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.user_prompt',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_help'),\n            })}\n            {/* new settings for role */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.role',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.role_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.role_help'),\n            })}\n            {/* new settings for prompt */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.prompt',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.prompt_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.prompt_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.user_prompt_badge_text',\n              type: 'text',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_badge_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.user_prompt_badge_help'),\n            })}\n            {/*new setting for queue_active */}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.queue_active',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.queue_active_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.queue_active_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.answer_duration',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.answer_duration_label'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.enable_on_reply',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_reply_label'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.enable_on_discussion_started',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_discussion_started_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enable_on_discussion_started_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.continue_to_reply',\n              type: 'boolean',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'muhammedsaidckr-chatgpt.continue_to_reply_count',\n              type: 'number',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_count_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.continue_to_reply_count_help'),\n            })}\n            {this.buildSettingComponent({\n              type: 'flarum-tags.select-tags',\n              setting: 'muhammedsaidckr-chatgpt.enabled-tags',\n              label: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enabled_tags_label'),\n              help: app.translator.trans('muhammedsaidckr-chatgpt.admin.settings.enabled_tags_help'),\n              options: {\n                requireParentTag: false,\n                limits: {\n                  max: {\n                    secondary: 0,\n                  },\n                },\n              },\n            })}\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport ChatGptSettings from \"./components/ChatGptSettings\";\n\napp.initializers.add('muhammedsaidckr-chatgpt', () => {\n  app.extensionData\n    .for('muhammedsaidckr-chatgpt')\n    .registerPermission(\n      {\n        label: app.translator.trans('muhammedsaidckr-chatgpt.admin.permissions.use_chatgpt_assistant_label'),\n        icon: 'fas fa-comment',\n        permission: 'discussion.useChatGPTAssistant',\n        allowGuest: false,\n      },\n      'start'\n    ).registerPage(ChatGptSettings);\n});\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","flarum","core","compat","app","add","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","models","require","data","reduce","acc","model","id","ChatGptSettings","_ExtensionPage","subClass","superClass","apply","arguments","create","constructor","_proto","oninit","vnode","this","loading","content","m","className","buildSettingComponent","setting","type","label","trans","help","href","target","rel","placeholder","options","default","requireParentTag","limits","max","secondary","submitButton","ExtensionPage","registerPermission","icon","permission","allowGuest","registerPage"],"sourceRoot":""}